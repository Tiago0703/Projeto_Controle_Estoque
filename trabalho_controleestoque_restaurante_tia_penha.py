# -*- coding: utf-8 -*-
"""Trabalho Tia Penha

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17tN9Lfr6LiSgRrjZ7pGdGh6qAlAc2e6G
"""

class Produto:
    def __init__(self, nome, quantidade, limite_estoque):
        self.nome = nome
        self.quantidade = quantidade
        self.limite_estoque = limite_estoque

    def __repr__(self):
        return f"{self.nome}: {self.quantidade} unidades (Limite: {self.limite_estoque})"

class PizzariaEstoque:
    def __init__(self):
        self.estoque = {}

    def cadastrar_produto(self):
        nome = input("Digite o nome do produto: ")
        if nome in self.estoque:
            print(f"Produto {nome} já cadastrado!")
            return

        try:
            quantidade = int(input(f"Digite a quantidade inicial de {nome}: "))
            limite_estoque = int(input(f"Digite o limite de estoque para alertas de {nome}: "))
            self.estoque[nome] = Produto(nome, quantidade, limite_estoque)
            print(f"Produto {nome} cadastrado com sucesso!")
        except ValueError:
            print("Por favor, insira um número válido.")

    def atualizar_estoque(self):
        nome = input("Digite o nome do produto para atualizar o estoque: ")
        if nome in self.estoque:
            try:
                quantidade = int(input(f"Digite a quantidade para adicionar ao estoque de {nome}: "))
                self.estoque[nome].quantidade += quantidade
                print(f"Estoque de {nome} atualizado: {self.estoque[nome].quantidade} unidades.")
            except ValueError:
                print("Por favor, insira um número válido.")
        else:
            print(f"Produto {nome} não encontrado!")

    def consumir_produto(self):
        nome = input("Digite o nome do produto que foi consumido: ")
        if nome in self.estoque:
            try:
                quantidade = int(input(f"Digite a quantidade consumida de {nome}: "))
                if self.estoque[nome].quantidade >= quantidade:
                    self.estoque[nome].quantidade -= quantidade
                    print(f"Consumido {quantidade} de {nome}. Restante: {self.estoque[nome].quantidade} unidades.")
                    if self.estoque[nome].quantidade <= self.estoque[nome].limite_estoque:
                        print(f"Atenção: {nome} está abaixo do limite de estoque!")
                else:
                    print(f"Quantidade insuficiente de {nome} no estoque.")
            except ValueError:
                print("Por favor, insira um número válido.")
        else:
            print(f"Produto {nome} não encontrado!")

    def relatorio_estoque(self):
        print("\nRelatório de Estoque:")
        for produto in self.estoque.values():
            print(produto)
        print()

# Sistema interativo
def menu():
    pizzaria = PizzariaEstoque()

    while True:
        print("\nEscolha uma opção:")
        print("1. Cadastrar Produto")
        print("2. Atualizar Estoque")
        print("3. Consumir Produto")
        print("4. Relatório de Estoque")
        print("5. Sair")

        opcao = input("\nDigite a opção desejada: ")

        if opcao == "1":
            pizzaria.cadastrar_produto()
        elif opcao == "2":
            pizzaria.atualizar_estoque()
        elif opcao == "3":
            pizzaria.consumir_produto()
        elif opcao == "4":
            pizzaria.relatorio_estoque()
        elif opcao == "5":
            print("Saindo do sistema.")
            break
        else:
            print("Opção inválida, tente novamente.")

# Executar o sistema
menu()